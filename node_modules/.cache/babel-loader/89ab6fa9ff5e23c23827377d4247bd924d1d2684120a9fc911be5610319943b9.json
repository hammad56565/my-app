{"ast":null,"code":"// import './App.css';\n// import React from \"react\";\nimport{useState}from'react';import About from'./components/About.mjs';import Navbar from'./components/Navbar.mjs';import TextForm from'./components/TextForms.mjs';import Alert from'./components/alert.mjs';import{BrowserRouter as Router,Routes,Route,Link}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[mode,setMode]=useState('light');// whether dark mode is enable \nconst[alert,setAlert]=useState(null);// whether dark alert is enable \nconst showAlert=(message,type)=>{setAlert({msg:message,type:type});};const toggleMode=()=>{if(mode==='light'){setMode('dark');document.body.style.backgroundColor='#2f335c';document.body.style.Color='white';showAlert('Dark mode has been enabled','success');document.title='TextUtils - Dark';// setInterval(()=>{\n//   document.title = 'TextUtils - Int 1'\n// },1500)\n// setInterval(()=>{\n//   document.title = 'TextUtils - Int 2'\n// },2000)\n}else{setMode('light');document.body.style.backgroundColor='white';document.body.style.Color='#2f335c';showAlert('Light mode has been enabled','success');document.title='TextUtils - Light';}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",about:\"About Us\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/about\",element:/*#__PURE__*/_jsx(About,{})}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",element:/*#__PURE__*/_jsx(TextForm,{heading:\"Enter Text To Analyze\",mode:mode,showAlert:showAlert})})]})]})});}export default App;","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alert","BrowserRouter","Router","Routes","Route","Link","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","Color","title","children","about","exact","path","element","heading"],"sources":["D:/REACT/my-app/src/App.mjs"],"sourcesContent":["\n// import './App.css';\n// import React from \"react\";\nimport { useState } from 'react';\nimport About from './components/About.mjs';\nimport Navbar from './components/Navbar.mjs';\nimport TextForm from './components/TextForms.mjs';\nimport Alert from './components/alert.mjs';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n\n const[mode,setMode] = useState('light') // whether dark mode is enable \n const[alert,setAlert] = useState(null) // whether dark alert is enable \n\nconst showAlert = (message,type)=>{\n  setAlert({\n    msg : message ,\n    type : type\n  })\n}\n\n\n const toggleMode = ()=>{\n  if(mode === 'light'){\n    setMode('dark')\n    document.body.style.backgroundColor = '#2f335c'\n    document.body.style.Color = 'white'\n    showAlert('Dark mode has been enabled' ,'success')\n    document.title = 'TextUtils - Dark'\n    // setInterval(()=>{\n    //   document.title = 'TextUtils - Int 1'\n\n    // },1500)\n    // setInterval(()=>{\n    //   document.title = 'TextUtils - Int 2'\n\n    // },2000)\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor = 'white'\n    document.body.style.Color = '#2f335c'\n    showAlert('Light mode has been enabled' ,'success')\n    document.title = 'TextUtils - Light'\n\n  }\n }\n  return (\n    <>\n    <Router>\n<Navbar title='TextUtils' about='About Us' mode={mode}  toggleMode={toggleMode}/>\n<Alert alert={alert} />\n           {/* <TextForm heading='Enter Text To Analyze' mode={mode} showAlert={showAlert} /> */}\n<Routes>\n          <Route exact path=\"/about\" element={<About />}/>\n          <Route exact path=\"/\" element={   <TextForm heading='Enter Text To Analyze' mode={mode} showAlert={showAlert} />}/>\n            {/* <About /> */}\n          {/* </Route> */}\n         \n          {/* <Route path=\"/\">\n          </Route> */}\n        </Routes>\n{/* <About/> */}\n</Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"AACA;AACA;AACA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,KAAK,KAAM,wBAAwB,CAC1C,MAAO,CAAAC,MAAM,KAAM,yBAAyB,CAC5C,MAAO,CAAAC,QAAQ,KAAM,4BAA4B,CACjD,MAAO,CAAAC,KAAK,KAAM,wBAAwB,CAC1C,OACEC,aAAa,GAAI,CAAAC,MAAM,CACvBC,MAAM,CACNC,KAAK,CACLC,IAAI,KACC,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAC1B,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEd,KAAK,CAACC,IAAI,CAACC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,OAAO,CAAC,CAAC;AACxC,KAAK,CAACmB,KAAK,CAACC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC;AAExC,KAAM,CAAAqB,SAAS,CAAGA,CAACC,OAAO,CAACC,IAAI,GAAG,CAChCH,QAAQ,CAAC,CACPI,GAAG,CAAGF,OAAO,CACbC,IAAI,CAAGA,IACT,CAAC,CAAC,CACJ,CAAC,CAGA,KAAM,CAAAE,UAAU,CAAGA,CAAA,GAAI,CACtB,GAAGR,IAAI,GAAK,OAAO,CAAC,CAClBC,OAAO,CAAC,MAAM,CAAC,CACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,OAAO,CACnCT,SAAS,CAAC,4BAA4B,CAAE,SAAS,CAAC,CAClDK,QAAQ,CAACK,KAAK,CAAG,kBAAkB,CACnC;AACA;AAEA;AACA;AACA;AAEA;AACF,CAAC,IACG,CACFb,OAAO,CAAC,OAAO,CAAC,CAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,CAAG,SAAS,CACrCT,SAAS,CAAC,6BAA6B,CAAE,SAAS,CAAC,CACnDK,QAAQ,CAACK,KAAK,CAAG,mBAAmB,CAEtC,CACD,CAAC,CACA,mBACEpB,IAAA,CAAAI,SAAA,EAAAiB,QAAA,cACAnB,KAAA,CAACP,MAAM,EAAA0B,QAAA,eACXrB,IAAA,CAACT,MAAM,EAAC6B,KAAK,CAAC,WAAW,CAACE,KAAK,CAAC,UAAU,CAAChB,IAAI,CAAEA,IAAK,CAAEQ,UAAU,CAAEA,UAAW,CAAC,CAAC,cACjFd,IAAA,CAACP,KAAK,EAACe,KAAK,CAAEA,KAAM,CAAE,CAAC,cAEvBN,KAAA,CAACN,MAAM,EAAAyB,QAAA,eACGrB,IAAA,CAACH,KAAK,EAAC0B,KAAK,MAACC,IAAI,CAAC,QAAQ,CAACC,OAAO,cAAEzB,IAAA,CAACV,KAAK,GAAE,CAAE,CAAC,CAAC,cAChDU,IAAA,CAACH,KAAK,EAAC0B,KAAK,MAACC,IAAI,CAAC,GAAG,CAACC,OAAO,cAAKzB,IAAA,CAACR,QAAQ,EAACkC,OAAO,CAAC,uBAAuB,CAACpB,IAAI,CAAEA,IAAK,CAACI,SAAS,CAAEA,SAAU,CAAE,CAAE,CAAC,CAAC,EAM7G,CAAC,EAET,CAAC,CACH,CAAC,CAEP,CAEA,cAAe,CAAAL,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}