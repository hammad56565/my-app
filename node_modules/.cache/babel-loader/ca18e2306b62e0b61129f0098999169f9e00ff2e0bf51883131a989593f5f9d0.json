{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\my-app\\\\src\\\\App.mjs\",\n  _s = $RefreshSig$();\n// import './App.css';\nimport { useState } from 'react';\nimport About from './components/About.mjs';\nimport Navbar from './components/Navbar.mjs';\nimport TextForm from './components/TextForms.mjs';\nimport Alert from './components/alert.mjs';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // whether dark mode is enable \n  const [alert, setAlert] = useState(null); // whether dark alert is enable \n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#2f335c';\n      document.body.style.Color = 'white';\n      showAlert('Dark mode has been enabled', 'success');\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.Color = '#2f335c';\n      showAlert('Light mode has been enabled', 'success');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      about: \"About Us\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      heading: \"Enter Text To Analyze\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","Color","children","title","about","fileName","_jsxFileName","lineNumber","columnNumber","heading","_c","$RefreshReg$"],"sources":["D:/REACT/my-app/src/App.mjs"],"sourcesContent":["\n// import './App.css';\nimport { useState } from 'react';\nimport About from './components/About.mjs';\nimport Navbar from './components/Navbar.mjs';\nimport TextForm from './components/TextForms.mjs';\nimport Alert from './components/alert.mjs';\nfunction App() {\n\n const[mode,setMode] = useState('light') // whether dark mode is enable \n const[alert,setAlert] = useState(null) // whether dark alert is enable \n\nconst showAlert = (message,type)=>{\n  setAlert({\n    msg : message ,\n    type : type\n  })\n}\n\n\n const toggleMode = ()=>{\n  if(mode === 'light'){\n    setMode('dark')\n    document.body.style.backgroundColor = '#2f335c'\n    document.body.style.Color = 'white'\n    showAlert('Dark mode has been enabled' ,'success')\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor = 'white'\n    document.body.style.Color = '#2f335c'\n    showAlert('Light mode has been enabled' ,'success')\n  }\n }\n  return (\n    <>\n<Navbar title='TextUtils' about='About Us' mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert} />\n<TextForm heading='Enter Text To Analyze' mode={mode} />\n{/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,KAAK,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,OAAO,CAAC,EAAC;EACxC,MAAK,CAACa,KAAK,EAACC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,EAAC;;EAExC,MAAMe,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAAGF,OAAO;MACbC,IAAI,EAAGA;IACT,CAAC,CAAC;EACJ,CAAC;EAGA,MAAME,UAAU,GAAGA,CAAA,KAAI;IACtB,IAAGR,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCT,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;IACpD,CAAC,MACG;MACFH,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,SAAS;MACrCT,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;IACrD;EACD,CAAC;EACA,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACJnB,OAAA,CAACJ,MAAM;MAACwB,KAAK,EAAC,WAAW;MAACC,KAAK,EAAC,UAAU;MAAChB,IAAI,EAAEA,IAAK;MAACQ,UAAU,EAAEA;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChFzB,OAAA,CAACF,KAAK;MAACS,KAAK,EAAEA;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvBzB,OAAA,CAACH,QAAQ;MAAC6B,OAAO,EAAC,uBAAuB;MAACrB,IAAI,EAAEA;IAAK;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAElD,CAAC;AAEP;AAACrB,EAAA,CAnCQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqCZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}