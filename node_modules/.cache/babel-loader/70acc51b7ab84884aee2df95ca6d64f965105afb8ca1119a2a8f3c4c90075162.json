{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\my-app\\\\src\\\\App.mjs\",\n  _s = $RefreshSig$();\n// import './App.css';\n// import React from \"react\";\nimport { useState } from 'react';\nimport About from './components/About.mjs';\nimport Navbar from './components/Navbar.mjs';\nimport TextForm from './components/TextForms.mjs';\nimport Alert from './components/alert.mjs';\nimport { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light'); // whether dark mode is enable \n  const [alert, setAlert] = useState(null); // whether dark alert is enable \n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n  };\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#2f335c';\n      document.body.style.Color = 'white';\n      showAlert('Dark mode has been enabled', 'success');\n      document.title = 'TextUtils - Dark';\n      // setInterval(()=>{\n      //   document.title = 'TextUtils - Int 1'\n\n      // },1500)\n      // setInterval(()=>{\n      //   document.title = 'TextUtils - Int 2'\n\n      // },2000)\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      document.body.style.Color = '#2f335c';\n      showAlert('Light mode has been enabled', 'success');\n      document.title = 'TextUtils - Light';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        title: \"TextUtils\",\n        about: \"About Us\",\n        mode: mode,\n        toggleMode: toggleMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Alert, {\n        alert: alert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"QWu0QpbEF50KcvttgEfF5q8xP20=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","About","Navbar","TextForm","Alert","BrowserRouter","Router","Routes","Route","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","toggleMode","document","body","style","backgroundColor","Color","title","children","about","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["D:/REACT/my-app/src/App.mjs"],"sourcesContent":["\n// import './App.css';\n// import React from \"react\";\nimport { useState } from 'react';\nimport About from './components/About.mjs';\nimport Navbar from './components/Navbar.mjs';\nimport TextForm from './components/TextForms.mjs';\nimport Alert from './components/alert.mjs';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n\n const[mode,setMode] = useState('light') // whether dark mode is enable \n const[alert,setAlert] = useState(null) // whether dark alert is enable \n\nconst showAlert = (message,type)=>{\n  setAlert({\n    msg : message ,\n    type : type\n  })\n}\n\n\n const toggleMode = ()=>{\n  if(mode === 'light'){\n    setMode('dark')\n    document.body.style.backgroundColor = '#2f335c'\n    document.body.style.Color = 'white'\n    showAlert('Dark mode has been enabled' ,'success')\n    document.title = 'TextUtils - Dark'\n    // setInterval(()=>{\n    //   document.title = 'TextUtils - Int 1'\n\n    // },1500)\n    // setInterval(()=>{\n    //   document.title = 'TextUtils - Int 2'\n\n    // },2000)\n  }\n  else{\n    setMode('light')\n    document.body.style.backgroundColor = 'white'\n    document.body.style.Color = '#2f335c'\n    showAlert('Light mode has been enabled' ,'success')\n    document.title = 'TextUtils - Light'\n\n  }\n }\n  return (\n    <>\n    <Router>\n<Navbar title='TextUtils' about='About Us' mode={mode}  toggleMode={toggleMode}/>\n<Alert alert={alert} />\n<Routes>\n          <Route path=\"/about\" element={<About />}/>\n            {/* <About /> */}\n          {/* </Route> */}\n         \n          {/* <Route path=\"/\">\n          <TextForm heading='Enter Text To Analyze' mode={mode} showAlert={showAlert} />\n          </Route> */}\n        </Routes>\n{/* <About/> */}\n</Router>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA;AACA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,EACLC,IAAI,QACC,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAC1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAK,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,OAAO,CAAC,EAAC;EACxC,MAAK,CAACkB,KAAK,EAACC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,EAAC;;EAExC,MAAMoB,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAAG;IAChCH,QAAQ,CAAC;MACPI,GAAG,EAAGF,OAAO;MACbC,IAAI,EAAGA;IACT,CAAC,CAAC;EACJ,CAAC;EAGA,MAAME,UAAU,GAAGA,CAAA,KAAI;IACtB,IAAGR,IAAI,KAAK,OAAO,EAAC;MAClBC,OAAO,CAAC,MAAM,CAAC;MACfQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,OAAO;MACnCT,SAAS,CAAC,4BAA4B,EAAE,SAAS,CAAC;MAClDK,QAAQ,CAACK,KAAK,GAAG,kBAAkB;MACnC;MACA;;MAEA;MACA;MACA;;MAEA;IACF,CAAC,MACG;MACFb,OAAO,CAAC,OAAO,CAAC;MAChBQ,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACE,KAAK,GAAG,SAAS;MACrCT,SAAS,CAAC,6BAA6B,EAAE,SAAS,CAAC;MACnDK,QAAQ,CAACK,KAAK,GAAG,mBAAmB;IAEtC;EACD,CAAC;EACA,oBACEnB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACApB,OAAA,CAACL,MAAM;MAAAyB,QAAA,gBACXpB,OAAA,CAACT,MAAM;QAAC4B,KAAK,EAAC,WAAW;QAACE,KAAK,EAAC,UAAU;QAAChB,IAAI,EAAEA,IAAK;QAAEQ,UAAU,EAAEA;MAAW;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjFzB,OAAA,CAACP,KAAK;QAACc,KAAK,EAAEA;MAAM;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvBzB,OAAA,CAACJ,MAAM;QAAAwB,QAAA,eACGpB,OAAA,CAACH,KAAK;UAAC6B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAE3B,OAAA,CAACV,KAAK;YAAAgC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAET;EAAC,gBACH,CAAC;AAEP;AAACrB,EAAA,CAxDQD,GAAG;AAAAyB,EAAA,GAAHzB,GAAG;AA0DZ,eAAeA,GAAG;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}